ubuntu@control:~/vprofile$ ls
exercise1   exercise11  exercise13  exercise3  exercise5  exercise7  exercise9
exercise10  exercise12  exercise2   exercise4  exercise6  exercise8
ubuntu@control:~/vprofile$ cp -r exercise13 exercise14
ubuntu@control:~/vprofile$ ls
exercise1   exercise11  exercise13  exercise2  exercise4  exercise6  exercise8
exercise10  exercise12  exercise14  exercise3  exercise5  exercise7  exercise9
ubuntu@control:~/vprofile$ cd exercise14/
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg    group_vars  inventory          templates
clientkey.pem  host_vars   provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg    group_vars  inventory          templates
clientkey.pem  host_vars   provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ mkdir files
ubuntu@control:~/vprofile/exercise14$ vim files/myfile.txt
ubuntu@control:~/vprofile/exercise14$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [web02]
ok: [web01]
ok: [db01]
ok: [web03]

TASK [Install ntp agent] *****************************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web01] => (item=wget)
ok: [web02] => (item=wget)
ok: [db01] => (item=wget)
ok: [web01] => (item=git)
ok: [web02] => (item=git)
ok: [db01] => (item=git)
ok: [web01] => (item=zip)
ok: [web02] => (item=zip)
ok: [db01] => (item=zip)
ok: [web01] => (item=unzip)
ok: [web02] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [Install ntp agent] *****************************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web01]
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [Start service on centos] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [Start service on ubuntu] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [Create a folder] *******************************************************************
fatal: [web01]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'mydir' is undefined. 'mydir' is undefined\n\nThe error appears to be in '/home/ubuntu/vprofile/exercise14/provisioning.yaml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Create a folder\n      ^ here\n"}
fatal: [web02]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'mydir' is undefined. 'mydir' is undefined\n\nThe error appears to be in '/home/ubuntu/vprofile/exercise14/provisioning.yaml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Create a folder\n      ^ here\n"}
fatal: [web03]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'mydir' is undefined. 'mydir' is undefined\n\nThe error appears to be in '/home/ubuntu/vprofile/exercise14/provisioning.yaml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Create a folder\n      ^ here\n"}
fatal: [db01]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'mydir' is undefined. 'mydir' is undefined\n\nThe error appears to be in '/home/ubuntu/vprofile/exercise14/provisioning.yaml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Create a folder\n      ^ here\n"}

PLAY RECAP *******************************************************************************
db01                       : ok=2    changed=0    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0
web01                      : ok=2    changed=0    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0
web02                      : ok=2    changed=0    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0
web03                      : ok=3    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [web01]
ok: [web02]
ok: [db01]
ok: [web03]

TASK [Install ntp agent] *****************************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [web01] => (item=wget)
ok: [web02] => (item=wget)
ok: [db01] => (item=wget)
ok: [web01] => (item=git)
ok: [web02] => (item=git)
ok: [db01] => (item=git)
ok: [web01] => (item=zip)
ok: [web02] => (item=zip)
ok: [db01] => (item=zip)
ok: [web01] => (item=unzip)
ok: [web02] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [Install ntp agent] *****************************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web01]
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [Start service on centos] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [Start service on ubuntu] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [Create a folder] *******************************************************************
changed: [web03]
changed: [web01]
changed: [web02]
changed: [db01]

TASK [Banner file] ***********************************************************************
ok: [web03]
ok: [db01]
ok: [web01]
ok: [web02]

TASK [Deploy ntp agent conf on centos] ***************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [Deploy ntp agent conf on ubuntu] ***************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [Dump file] *************************************************************************
fatal: [web01]: FAILED! => {"changed": false, "msg": "src (or content) is required"}
fatal: [web03]: FAILED! => {"changed": false, "msg": "src (or content) is required"}
fatal: [web02]: FAILED! => {"changed": false, "msg": "src (or content) is required"}
fatal: [db01]: FAILED! => {"changed": false, "msg": "src (or content) is required"}

PLAY RECAP *******************************************************************************
db01                       : ok=4    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0
web01                      : ok=4    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0
web02                      : ok=4    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0
web03                      : ok=6    changed=1    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [web01]
ok: [db01]
ok: [web02]
ok: [web03]

TASK [Install ntp agent] *****************************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web02] => (item=wget)
ok: [web01] => (item=wget)
ok: [db01] => (item=wget)
ok: [web02] => (item=git)
ok: [web01] => (item=git)
ok: [db01] => (item=git)
ok: [web02] => (item=zip)
ok: [web01] => (item=zip)
ok: [db01] => (item=zip)
ok: [web02] => (item=unzip)
ok: [web01] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [Install ntp agent] *****************************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web01]
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [Start service on centos] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [Start service on ubuntu] ***********************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [Create a folder] *******************************************************************
ok: [web03]
ok: [web02]
ok: [db01]
ok: [web01]

TASK [Banner file] ***********************************************************************
ok: [web03]
ok: [web02]
ok: [db01]
ok: [web01]

TASK [Deploy ntp agent conf on centos] ***************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [Deploy ntp agent conf on ubuntu] ***************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [Dump file] *************************************************************************
changed: [web03]
changed: [web02]
changed: [web01]
changed: [db01]

PLAY RECAP *******************************************************************************
db01                       : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web01                      : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web02                      : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web03                      : ok=7    changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg    files       host_vars  provisioning.yaml
clientkey.pem  group_vars  inventory  templates
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg    files       host_vars  provisioning.yaml
clientkey.pem  group_vars  inventory  templates
ubuntu@control:~/vprofile/exercise14$ sudo apt install tree -y
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  tree
0 upgraded, 1 newly installed, 0 to remove and 21 not upgraded.
Need to get 47.1 kB of archives.
After this operation, 111 kB of additional disk space will be used.
Get:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 tree amd64 2.1.1-2ubuntu3 [47.1 kB]
Fetched 47.1 kB in 0s (2494 kB/s)
Selecting previously unselected package tree.
(Reading database ... 94533 files and directories currently installed.)
Preparing to unpack .../tree_2.1.1-2ubuntu3_amd64.deb ...
Unpacking tree (2.1.1-2ubuntu3) ...
Setting up tree (2.1.1-2ubuntu3) ...
Processing triggers for man-db (2.12.0-4build2) ...
Scanning processes...
Scanning linux images...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu@control:~/vprofile/exercise14$ cd ..
ubuntu@control:~/vprofile$ tree exercise14
exercise14
├── ansible.cfg
├── clientkey.pem
├── files
│   └── myfile.txt
├── group_vars
│   ├── all
│   └── webservers
├── host_vars
│   └── web02
├── inventory
├── provisioning.yaml
└── templates
    ├── ntpconf_centos
    └── ntpconf_ubuntu

5 directories, 10 files
ubuntu@control:~/vprofile$ cd exercise14/
ubuntu@control:~/vprofile/exercise14$ mkdir roles
ubuntu@control:~/vprofile/exercise14$ cd roles
ubuntu@control:~/vprofile/exercise14/roles$ ansible-galaxy init post-install
- Role post-install was created successfully
ubuntu@control:~/vprofile/exercise14/roles$ ls
post-install
ubuntu@control:~/vprofile/exercise14/roles$ tree
.
└── post-install
    ├── README.md
    ├── defaults
    │   └── main.yml
    ├── files
    ├── handlers
    │   └── main.yml
    ├── meta
    │   └── main.yml
    ├── tasks
    │   └── main.yml
    ├── templates
    ├── tests
    │   ├── inventory
    │   └── test.yml
    └── vars
        └── main.yml

10 directories, 8 files
ubuntu@control:~/vprofile/exercise14/roles$ cd ..
ubuntu@control:~/vprofile/exercise14$ cat group_vars/all
USRNM: commonuser
COMM: variable from groupvars_all file
ntp0: 0.north-america.pool.ntp.org
ntp1: 1.north-america.pool.ntp.org
ntp2: 2.north-america.pool.ntp.org
ntp3: 3.north-america.pool.ntp.org
ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/vars/main.yml
ubuntu@control:~/vprofile/exercise14$ cat provisioning.yaml
---
- name: Provisioning servers
  hosts: all
  become: yes
  vars:
    mydir: /opt/dir22

  tasks:
    - name: Install ntp agent
      yum:
        name: "{{item}}"
        state: present
      when: ansible_distribution == 'CentOS'
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip

    - name: Install ntp agent
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'
      loop:
        - ntp
        - wget
        - git
        - zip
        - unzip

    - name: Start service on centos
      service:
        name: chrony
        state: started
        enabled: yes
      when: ansible_distribution == 'Centos'

    - name: Start service on ubuntu
      service:
        name: ntp
        state: started
        enabled: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Create a folder
      file:
        path: "{{mydir}}"
        state: directory

    - name: Banner file
      copy:
        content: '# This server is managed by ansible.No manual changes please.'
        dest: /etc/motd

    - name: Deploy ntp agent conf on centos
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony.conf
        backup: yes
      when: ansible_distribution == 'Centos'
      notify:
        - reStart service on centos

    - name: Deploy ntp agent conf on ubuntu
      template:
        src: templates/ntpconf_ubuntu
        dest: /etc/ntp.conf
        backup: yes
      when: ansible_distribution == 'Ubuntu'
      notify:
        - reStart service on ubuntu

    - name: Dump file
      copy:
        src: files/myfile.txt
        dest: /tmp/myfile.txt


  handlers:
    - name: reStart service on centos
      service:
        name: chrony
        state: restarted
        enabled: yes
      when: ansible_distribution == 'Centos'

    - name: reStart service on ubuntu
      service:
        name: ntp
        state: restarted
        enabled: yes
      when: ansible_distribution == 'Ubuntu'

ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/vars/main.yml
ubuntu@control:~/vprofile/exercise14$ rm -rf group_vars host_vars
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg  clientkey.pem  files  inventory  provisioning.yaml  roles  templates
ubuntu@control:~/vprofile/exercise14$ cp files/* roles/post-install/files/
ubuntu@control:~/vprofile/exercise14$ cp templates/* roles/post-install/templates/
ubuntu@control:~/vprofile/exercise14$ cat provisioning.yaml
---
- name: Provisioning servers
  hosts: all
  become: yes
  vars:
    mydir: /opt/dir22

  tasks:
    - name: Install ntp agent
      yum:
        name: "{{item}}"
        state: present
      when: ansible_distribution == 'CentOS'
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip

    - name: Install ntp agent
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'
      loop:
        - ntp
        - wget
        - git
        - zip
        - unzip

    - name: Start service on centos
      service:
        name: chrony
        state: started
        enabled: yes
      when: ansible_distribution == 'Centos'

    - name: Start service on ubuntu
      service:
        name: ntp
        state: started
        enabled: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Create a folder
      file:
        path: "{{mydir}}"
        state: directory

    - name: Banner file
      copy:
        content: '# This server is managed by ansible.No manual changes please.'
        dest: /etc/motd

    - name: Deploy ntp agent conf on centos
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony.conf
        backup: yes
      when: ansible_distribution == 'Centos'
      notify:
        - reStart service on centos

    - name: Deploy ntp agent conf on ubuntu
      template:
        src: templates/ntpconf_ubuntu
        dest: /etc/ntp.conf
        backup: yes
      when: ansible_distribution == 'Ubuntu'
      notify:
        - reStart service on ubuntu

    - name: Dump file
      copy:
        src: files/myfile.txt
        dest: /tmp/myfile.txt


  handlers:
    - name: reStart service on centos
      service:
        name: chrony
        state: restarted
        enabled: yes
      when: ansible_distribution == 'Centos'

    - name: reStart service on ubuntu
      service:
        name: ntp
        state: restarted
        enabled: yes
      when: ansible_distribution == 'Ubuntu'

ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/handlers/main.yml
ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/tasks/main.yml
ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg  clientkey.pem  files  inventory  provisioning.yaml  roles  templates
ubuntu@control:~/vprofile/exercise14$ rm -rf files templates
ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/tasks/main.yml
ubuntu@control:~/vprofile/exercise14$ cd roles/post-install/templates/
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ ls
ntpconf_centos  ntpconf_ubuntu
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ mv ntpconf_centos ntpconf_centos.j2
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ ls
ntpconf_centos.j2  ntpconf_ubuntu
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ mv ntpconf_ubuntu ntpconf_ubuntu.j2
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ ls
ntpconf_centos.j2  ntpconf_ubuntu.j2
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ cd ../../..
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg  clientkey.pem  inventory  provisioning.yaml  roles
ubuntu@control:~/vprofile/exercise14$ ansible-playbook provisioning.yaml
ERROR! The tasks/main.yml file for role 'post-install' must contain a list of tasks

The error appears to be in '/home/ubuntu/vprofile/exercise14/roles/post-install/tasks/main.yml': line 3, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

# tasks file for post-install
tasks:
^ here
ubuntu@control:~/vprofile/exercise14$ ^C
ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/tasks/main.yml
ubuntu@control:~/vprofile/exercise14$ cat roles/post-install/tasks/main.yml
---
# tasks file for post-install
tasks:
- name: Install ntp agent
  yum:
    name: "{{item}}"
    state: present
  when: ansible_distribution == 'CentOS'
  loop:
    - chrony
    - wget
    - git
    - zip
    - unzip

- name: Install ntp agent
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'
  loop:
    - ntp
    - wget
    - git
    - zip
    - unzip

- name: Start service on centos
  service:
    name: chrony
    state: started
    enabled: yes
  when: ansible_distribution == 'Centos'

- name: Start service on ubuntu
  service:
    name: ntp
    state: started
    enabled: yes
  when: ansible_distribution == 'Ubuntu'

- name: Create a folder
  file:
    path: "{{mydir}}"
    state: directory

- name: Banner file
  copy:
    content: '# This server is managed by ansible.No manual changes please.'
    dest: /etc/motd

- name: Deploy ntp agent conf on centos
  template:
    src: ntpconf_centos.j2
    dest: /etc/chrony.conf
    backup: yes
  when: ansible_distribution == 'Centos'
  notify:
    - reStart service on centos

- name: Deploy ntp agent conf on ubuntu
  template:
    src: ntpconf_ubuntu.j2
    dest: /etc/ntp.conf
    backup: yes
  when: : ansible_distribution == 'Ubuntu'
  notify:
    - reStart service on ubuntu

- name: Dump file
  copy:
    src: myfile.txt
    dest: /tmp/myfile.txt

ubuntu@control:~/vprofile/exercise14$ vim roles/post-install/tasks/main.yml
ubuntu@control:~/vprofile/exercise14$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [db01]
ok: [web02]
ok: [web01]
ok: [web03]

TASK [post-install : Install ntp agent] **************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [web01] => (item=wget)
ok: [web02] => (item=wget)
ok: [db01] => (item=wget)
ok: [web01] => (item=git)
ok: [web02] => (item=git)
ok: [db01] => (item=git)
ok: [web01] => (item=zip)
ok: [web02] => (item=zip)
ok: [db01] => (item=zip)
ok: [web01] => (item=unzip)
ok: [web02] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [post-install : Install ntp agent] **************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web01]
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [post-install : Start service on centos] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Start service on ubuntu] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Create a folder] ****************************************************
ok: [web03]
ok: [db01]
ok: [web01]
ok: [web02]

TASK [post-install : Banner file] ********************************************************
changed: [web03]
changed: [db01]
changed: [web01]
changed: [web02]

TASK [post-install : Deploy ntp agent conf on centos] ************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Deploy ntp agent conf on ubuntu] ************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Dump file] **********************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

PLAY RECAP *******************************************************************************
db01                       : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web01                      : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web02                      : ok=5    changed=1    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web03                      : ok=7    changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise14$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise14$ tree roles/
roles/
└── post-install
    ├── README.md
    ├── defaults
    │   └── main.yml
    ├── files
    │   └── myfile.txt
    ├── handlers
    │   └── main.yml
    ├── meta
    │   └── main.yml
    ├── tasks
    │   └── main.yml
    ├── templates
    │   ├── ntpconf_centos.j2
    │   └── ntpconf_ubuntu.j2
    ├── tests
    │   ├── inventory
    │   └── test.yml
    └── vars
        └── main.yml

10 directories, 11 files
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg  clientkey.pem  inventory  provisioning.yaml  roles
ubuntu@control:~/vprofile/exercise14$ cat roles/post-install/REAMDE.md
cat: roles/post-install/REAMDE.md: No such file or directory
ubuntu@control:~/vprofile/exercise14$ ls roles
post-install
ubuntu@control:~/vprofile/exercise14$ ls roles/post-install/
README.md  defaults  files  handlers  meta  tasks  templates  tests  vars
ubuntu@control:~/vprofile/exercise14$ cd roles/post-install/
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cat README.md
Role Name
=========

A brief description of the role goes here.

Requirements
------------

Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.

Role Variables
--------------

A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.

Dependencies
------------

A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.

Example Playbook
----------------

Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:

    - hosts: servers
      roles:
         - { role: username.rolename, x: 42 }

License
-------

BSD

Author Information
------------------

An optional section for the role authors to include contact information, or a website (HTML is not allowed).
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd defaults/
ubuntu@control:~/vprofile/exercise14/roles/post-install/defaults$ ls
main.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/defaults$ cat main.yml
---
# defaults file for post-install
ubuntu@control:~/vprofile/exercise14/roles/post-install/defaults$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd files/
ubuntu@control:~/vprofile/exercise14/roles/post-install/files$ ls
myfile.txt
ubuntu@control:~/vprofile/exercise14/roles/post-install/files$ cat myfiles.txt
cat: myfiles.txt: No such file or directory
ubuntu@control:~/vprofile/exercise14/roles/post-install/files$ cat myfile.txt
!@#$%^&*(*&^
ubuntu@control:~/vprofile/exercise14/roles/post-install/files$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd handlers/
ubuntu@control:~/vprofile/exercise14/roles/post-install/handlers$ ls
main.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/handlers$ cat main.yml
---
# handlers file for post-install
- name: reStart service on centos
  service:
    name: chrony
    state: restarted
    enabled: yes
  when: ansible_distribution == 'Centos'

- name: reStart service on ubuntu
  service:
    name: ntp
    state: restarted
    enabled: yes
  when: ansible_distribution == 'Ubuntu'
ubuntu@control:~/vprofile/exercise14/roles/post-install/handlers$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd meta/
ubuntu@control:~/vprofile/exercise14/roles/post-install/meta$ ls
main.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/meta$ cat main.yml
galaxy_info:
  author: your name
  description: your role description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Choose a valid license ID from https://spdx.org - some suggested licenses:
  # - BSD-3-Clause (default)
  # - MIT
  # - GPL-2.0-or-later
  # - GPL-3.0-only
  # - Apache-2.0
  # - CC-BY-4.0
  license: license (GPL-2.0-or-later, MIT, etc)

  min_ansible_version: 2.1

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  #
  # Provide a list of supported platforms, and for each platform a list of versions.
  # If you don't wish to enumerate all versions for a particular platform, use 'all'.
  # To view available platforms and versions (or releases), visit:
  # https://galaxy.ansible.com/api/v1/platforms/
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies: []
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
ubuntu@control:~/vprofile/exercise14/roles/post-install/meta$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd tasks/
ubuntu@control:~/vprofile/exercise14/roles/post-install/tasks$ ls
main.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/tasks$ cat main.yml
---
# tasks file for post-install
- name: Install ntp agent
  yum:
    name: "{{ item }}"
    state: present
  when: ansible_distribution == 'CentOS'
  loop:
    - chrony
    - wget
    - git
    - zip
    - unzip

- name: Install ntp agent
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'
  loop:
    - ntp
    - wget
    - git
    - zip
    - unzip

- name: Start service on centos
  service:
    name: chrony
    state: started
    enabled: yes
  when: ansible_distribution == 'Centos'

- name: Start service on ubuntu
  service:
    name: ntp
    state: started
    enabled: yes
  when: ansible_distribution == 'Ubuntu'

- name: Create a folder
  file:
    path: "{{ mydir }}"
    state: directory

- name: Banner file
  copy:
    content: '# This server is managed by ansible. No manual changes please.'
    dest: /etc/motd

- name: Deploy ntp agent conf on centos
  template:
    src: ntpconf_centos.j2
    dest: /etc/chrony.conf
    backup: yes
  when: ansible_distribution == 'Centos'
  notify:
    - reStart service on centos

- name: Deploy ntp agent conf on ubuntu
  template:
    src: ntpconf_ubuntu.j2
    dest: /etc/ntp.conf
    backup: yes
  when: ansible_distribution == 'Ubuntu'
  notify:
    - reStart service on ubuntu

- name: Dump file
  copy:
    src: myfile.txt
    dest: /tmp/myfile.txt


ubuntu@control:~/vprofile/exercise14/roles/post-install/tasks$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd templates/
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ ls
ntpconf_centos.j2  ntpconf_ubuntu.j2
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ cat ntpconf_centos.j2
# Use public servers from the pool.ntp.org project.
# Please consider joining the pool (https://www.pool.ntp.org/join.html).
pool "{{ntp0}}" iburst
pool "{{ntp1}}" iburst
pool "{{ntp2}}" iburst
pool "{{ntp3}}" iburst

# Use NTP servers from DHCP.
sourcedir /run/chrony-dhcp

# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Allow the system clock to be stepped in the first three updates
# if its offset is larger than 1 second.
makestep 1.0 3

# Enable kernel synchronization of the real-time clock (RTC).
rtcsync

# Enable hardware timestamping on all interfaces that support it.
#hwtimestamp *

# Increase the minimum number of selectable sources required to adjust
# the system clock.
#minsources 2

# Allow NTP client access from local network.
#allow 192.168.0.0/16

# Serve time even if not synchronized to a time source.
#local stratum 10

# Require authentication (nts or key option) for all NTP sources.
#authselectmode require

# Specify file containing keys for NTP authentication.
keyfile /etc/chrony.keys

# Save NTS keys and cookies.
ntsdumpdir /var/lib/chrony

# Insert/delete leap seconds by slewing instead of stepping.
#leapsecmode slew

# Get TAI-UTC offset and leap seconds from the system tz database.
leapsectz right/UTC

# Specify directory for log files.
logdir /var/log/chrony

# Select which information is logged.
#log measurements statistics tracking

# Amazon Time Sync Service
server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4

ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ cat ntpconf_ubuntu.j2
# /etc/ntp.conf, configuration for ntpd; see ntp.conf(5) for help

driftfile /var/lib/ntp/ntp.drift

# Leap seconds definition provided by tzdata
leapfile /usr/share/zoneinfo/leap-seconds.list

# Enable this if you want statistics to be logged.
#statsdir /var/log/ntpstats/

statistics loopstats peerstats clockstats
filegen loopstats file loopstats type day enable
filegen peerstats file peerstats type day enable
filegen clockstats file clockstats type day enable

# Specify one or more NTP servers.

# Use servers from the NTP Pool Project. Approved by Ubuntu Technical Board
# on 2011-02-08 (LP: #104525). See http://www.pool.ntp.org/join.html for
# more information.
pool "{{ntp0}}" iburst
pool "{{ntp1}}" iburst
pool "{{ntp2}}" iburst
pool "{{ntp3}}" iburst

# Use Ubuntu's ntp server as a fallback.
pool ntp.ubuntu.com

# Access control configuration; see /usr/share/doc/ntp-doc/html/accopt.html for
# details.  The web page <http://support.ntp.org/bin/view/Support/AccessRestrictions>
# might also be helpful.
#
# Note that "restrict" applies to both servers and clients, so a configuration
# that might be intended to block requests from certain clients could also end
# up blocking replies from your own upstream servers.

# By default, exchange time with everybody, but don't allow configuration.
restrict -4 default kod notrap nomodify nopeer noquery limited
restrict -6 default kod notrap nomodify nopeer noquery limited

# Local users may interrogate the ntp server more closely.
restrict 127.0.0.1
restrict ::1

# Needed for adding pool entries
restrict source notrap nomodify noquery

# Clients from this (example!) subnet have unlimited access, but only if
# cryptographically authenticated.
#restrict 192.168.123.0 mask 255.255.255.0 notrust


# If you want to provide time to your local subnet, change the next line.
# (Again, the address is an example only.)
#broadcast 192.168.123.255

# If you want to listen to time broadcasts on your local subnet, de-comment the
# next lines.  Please do this only if you trust everybody on the network!
#disable auth
#broadcastclient
ubuntu@control:~/vprofile/exercise14/roles/post-install/templates$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd tests/
ubuntu@control:~/vprofile/exercise14/roles/post-install/tests$ ls
inventory  test.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/tests$ cat inventory
localhost

ubuntu@control:~/vprofile/exercise14/roles/post-install/tests$ cat test.yml
---
- hosts: localhost
  remote_user: root
  roles:
    - post-install
ubuntu@control:~/vprofile/exercise14/roles/post-install/tests$ cd ..
ubuntu@control:~/vprofile/exercise14/roles/post-install$ cd vars/
ubuntu@control:~/vprofile/exercise14/roles/post-install/vars$ ls
main.yml
ubuntu@control:~/vprofile/exercise14/roles/post-install/vars$ cat main.yml
---
# vars file for post-install
USRNM: commonuser
COMM: variable from groupvars_all file
ntp0: 0.north-america.pool.ntp.org
ntp1: 1.north-america.pool.ntp.org
ntp2: 2.north-america.pool.ntp.org
ntp3: 3.north-america.pool.ntp.org
mydir: /opt/dir22
ubuntu@control:~/vprofile/exercise14/roles/post-install/vars$ cd ../../
ubuntu@control:~/vprofile/exercise14/roles$ cd ..
ubuntu@control:~/vprofile/exercise14$ ls
ansible.cfg  clientkey.pem  inventory  provisioning.yaml  roles
ubuntu@control:~/vprofile/exercise14$ cat provisioning.yaml
---
- name: Provisioning servers
  hosts: all
  become: yes
  roles:
    - post-install


ubuntu@control:~/vprofile/exercise14$ cd ..
ubuntu@control:~/vprofile$ cp -r exercise14 exercise15
ubuntu@control:~/vprofile$ cd exercise15/
ubuntu@control:~/vprofile/exercise15$ cat roles/post-install/vars/main.yml
---
# vars file for post-install
USRNM: commonuser
COMM: variable from groupvars_all file
ntp0: 0.north-america.pool.ntp.org
ntp1: 1.north-america.pool.ntp.org
ntp2: 2.north-america.pool.ntp.org
ntp3: 3.north-america.pool.ntp.org
mydir: /opt/dir22
ubuntu@control:~/vprofile/exercise15$ vim roles/post-install/defaults/main.yml
ubuntu@control:~/vprofile/exercise15$ vim roles/post-install/vars/main.yml
ubuntu@control:~/vprofile/exercise15$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [web02]
ok: [web01]
ok: [db01]
ok: [web03]

TASK [post-install : Install ntp agent] **************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web02] => (item=chrony)
ok: [web01] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web02] => (item=wget)
ok: [web01] => (item=wget)
ok: [db01] => (item=wget)
ok: [web02] => (item=git)
ok: [web01] => (item=git)
ok: [db01] => (item=git)
ok: [web02] => (item=zip)
ok: [web01] => (item=zip)
ok: [db01] => (item=zip)
ok: [web02] => (item=unzip)
ok: [web01] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [post-install : Install ntp agent] **************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web01]
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [post-install : Start service on centos] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Start service on ubuntu] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Create a folder] ****************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

TASK [post-install : Banner file] ********************************************************
ok: [web01]
ok: [web02]
ok: [db01]
ok: [web03]

TASK [post-install : Deploy ntp agent conf on centos] ************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Deploy ntp agent conf on ubuntu] ************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Dump file] **********************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

PLAY RECAP *******************************************************************************
db01                       : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web01                      : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web02                      : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web03                      : ok=7    changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise15$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise15$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [web01]
ok: [db01]
ok: [web02]
ok: [web03]

TASK [post-install : Install ntp agent] **************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web01] => (item=wget)
ok: [web02] => (item=wget)
ok: [db01] => (item=wget)
ok: [web01] => (item=git)
ok: [web02] => (item=git)
ok: [db01] => (item=git)
ok: [web01] => (item=zip)
ok: [web02] => (item=zip)
ok: [db01] => (item=zip)
ok: [web01] => (item=unzip)
ok: [web02] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [post-install : Install ntp agent] **************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web02] => (item=zip)
skipping: [web02] => (item=unzip)
skipping: [web01]
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [post-install : Start service on centos] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Start service on ubuntu] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Create a folder] ****************************************************
ok: [web03]
ok: [web01]
ok: [db01]
ok: [web02]

TASK [post-install : Banner file] ********************************************************
ok: [web03]
ok: [web01]
ok: [db01]
ok: [web02]

TASK [post-install : Deploy ntp agent conf on centos] ************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Deploy ntp agent conf on ubuntu] ************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
changed: [web03]

TASK [post-install : Dump file] **********************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

RUNNING HANDLER [post-install : reStart service on ubuntu] *******************************
changed: [web03]

PLAY RECAP *******************************************************************************
db01                       : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web01                      : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web02                      : ok=5    changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0
web03                      : ok=8    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise15$ ansible-galaxy install geerlingguy.java
Starting galaxy role install process
- downloading role 'java', owned by geerlingguy
- downloading role from https://github.com/geerlingguy/ansible-role-java/archive/2.5.0.tar.gz
- extracting geerlingguy.java to /home/ubuntu/.ansible/roles/geerlingguy.java
- geerlingguy.java (2.5.0) was installed successfully
ubuntu@control:~/vprofile/exercise15$ vim provisioning.yaml
ubuntu@control:~/vprofile/exercise15$ ansible-galaxy install geerlingguy.java
Starting galaxy role install process
[WARNING]: - geerlingguy.java (2.5.0) is already installed - use --force to change
version to unspecified
ubuntu@control:~/vprofile/exercise15$ ansible-playbook provisioning.yaml

PLAY [Provisioning servers] **************************************************************

TASK [Gathering Facts] *******************************************************************
ok: [db01]
ok: [web01]
ok: [web02]
ok: [web03]

TASK [geerlingguy.java : Include OS-specific variables for Fedora or FreeBSD.] ***********
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [geerlingguy.java : Include OS-specific variables for Amazon.] **********************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [geerlingguy.java : Include version-specific variables for CentOS/RHEL.] ************
ok: [web01]
ok: [web02]
skipping: [web03]
ok: [db01]

TASK [geerlingguy.java : Include version-specific variables for Ubuntu.] *****************
skipping: [web01]
skipping: [web02]
ok: [web03]
skipping: [db01]

TASK [geerlingguy.java : Include version-specific variables for Debian.] *****************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [geerlingguy.java : Define java_packages.] ******************************************
ok: [web01]
ok: [web02]
ok: [web03]
ok: [db01]

TASK [geerlingguy.java : include_tasks] **************************************************
skipping: [web03]
included: /home/ubuntu/.ansible/roles/geerlingguy.java/tasks/setup-RedHat.yml for web01, web02, db01

TASK [geerlingguy.java : Ensure Java is installed.] **************************************
changed: [web02]
changed: [web01]
changed: [db01]

TASK [geerlingguy.java : include_tasks] **************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [geerlingguy.java : include_tasks] **************************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
included: /home/ubuntu/.ansible/roles/geerlingguy.java/tasks/setup-Debian.yml for web03

TASK [geerlingguy.java : Ensure 'man' directory exists.] *********************************
ok: [web03]

TASK [geerlingguy.java : Ensure Java is installed.] **************************************
changed: [web03]

TASK [geerlingguy.java : include_tasks] **************************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [geerlingguy.java : Set JAVA_HOME if configured.] ***********************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Install ntp agent] **************************************************
skipping: [web03] => (item=chrony)
skipping: [web03] => (item=wget)
skipping: [web03] => (item=git)
skipping: [web03] => (item=zip)
skipping: [web03] => (item=unzip)
skipping: [web03]
ok: [web01] => (item=chrony)
ok: [db01] => (item=chrony)
ok: [web02] => (item=chrony)
ok: [web01] => (item=wget)
ok: [db01] => (item=wget)
ok: [web02] => (item=wget)
ok: [web01] => (item=git)
ok: [web02] => (item=git)
ok: [db01] => (item=git)
ok: [web01] => (item=zip)
ok: [web02] => (item=zip)
ok: [db01] => (item=zip)
ok: [web01] => (item=unzip)
ok: [web02] => (item=unzip)
ok: [db01] => (item=unzip)

TASK [post-install : Install ntp agent] **************************************************
skipping: [web01] => (item=ntp)
skipping: [web01] => (item=wget)
skipping: [web01] => (item=git)
skipping: [web01] => (item=zip)
skipping: [web02] => (item=ntp)
skipping: [web01] => (item=unzip)
skipping: [web02] => (item=wget)
skipping: [web02] => (item=git)
skipping: [web01]
skipping: [web02] => (item=zip)
skipping: [web02] => (item=unzip)
skipping: [web02]
skipping: [db01] => (item=ntp)
skipping: [db01] => (item=wget)
skipping: [db01] => (item=git)
skipping: [db01] => (item=zip)
skipping: [db01] => (item=unzip)
skipping: [db01]
ok: [web03] => (item=ntp)
ok: [web03] => (item=wget)
ok: [web03] => (item=git)
ok: [web03] => (item=zip)
ok: [web03] => (item=unzip)

TASK [post-install : Start service on centos] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Start service on ubuntu] ********************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Create a folder] ****************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

TASK [post-install : Banner file] ********************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

TASK [post-install : Deploy ntp agent conf on centos] ************************************
skipping: [web01]
skipping: [web02]
skipping: [web03]
skipping: [db01]

TASK [post-install : Deploy ntp agent conf on ubuntu] ************************************
skipping: [web01]
skipping: [web02]
skipping: [db01]
ok: [web03]

TASK [post-install : Dump file] **********************************************************
ok: [web03]
ok: [web01]
ok: [web02]
ok: [db01]

PLAY RECAP *******************************************************************************
db01                       : ok=9    changed=1    unreachable=0    failed=0    skipped=13   rescued=0    ignored=0
web01                      : ok=9    changed=1    unreachable=0    failed=0    skipped=13   rescued=0    ignored=0
web02                      : ok=9    changed=1    unreachable=0    failed=0    skipped=13   rescued=0    ignored=0
web03                      : ok=13   changed=1    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0

ubuntu@control:~/vprofile/exercise15$ cd
ubuntu@control:~$ ls -a
.   .ansible       .bash_logout  .cache   .profile  .sudo_as_admin_successful  vprofile
..  .bash_history  .bashrc       .config  .ssh      .viminfo
ubuntu@control:~$ cd .ansible/
ubuntu@control:~/.ansible$ ls
collections  cp  galaxy_cache  galaxy_token  roles  tmp
ubuntu@control:~/.ansible$ cd roles/
ubuntu@control:~/.ansible/roles$ ls
geerlingguy.java
ubuntu@control:~/.ansible/roles$ cd geerlingguy.java/
ubuntu@control:~/.ansible/roles/geerlingguy.java$ ls
LICENSE  README.md  defaults  meta  molecule  tasks  templates  vars
ubuntu@control:~/.ansible/roles/geerlingguy.java$ tree
.
├── LICENSE
├── README.md
├── defaults
│   └── main.yml
├── meta
│   └── main.yml
├── molecule
│   └── default
│       ├── converge.yml
│       └── molecule.yml
├── tasks
│   ├── main.yml
│   ├── setup-Amazon.yml
│   ├── setup-Debian.yml
│   ├── setup-FreeBSD.yml
│   └── setup-RedHat.yml
├── templates
│   └── java_home.sh.j2
└── vars
    ├── Amazon-2.yml
    ├── Amazon-2023.yml
    ├── Debian-10.yml
    ├── Debian-11.yml
    ├── Debian-12.yml
    ├── Debian-8.yml
    ├── Debian-9.yml
    ├── Fedora.yml
    ├── FreeBSD.yml
    ├── RedHat-7.yml
    ├── RedHat-8.yml
    ├── RedHat-9.yml
    ├── Ubuntu-12.yml
    ├── Ubuntu-14.yml
    ├── Ubuntu-16.yml
    ├── Ubuntu-18.yml
    ├── Ubuntu-20.yml
    ├── Ubuntu-22.yml
    └── Ubuntu-24.yml

8 directories, 31 files
ubuntu@control:~/.ansible/roles/geerlingguy.java$ ls
LICENSE  README.md  defaults  meta  molecule  tasks  templates  vars
ubuntu@control:~/.ansible/roles/geerlingguy.java$ vim tasks/main.yml
ubuntu@control:~/.ansible/roles/geerlingguy.java$
